/*
 * File: GroupForm.js
 * Date: Thu Aug 12 2010 10:18:05 GMT-0300 (Hora oficial do Brasil)
 * 
 * This file was generated by Ext Designer version xds-1.0.2.11.
 * http://www.extjs.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

GroupForm = Ext.extend(GroupFormUi, {
    waitingPrivilegesMsg: 'Carregando permissões...',
    initComponent: function() {
        GroupForm.superclass.initComponent.call(this);

        this.ckActive.replaceWith({xtype: 'xcheckbox'});
        
        this.treePermission.replaceWith({
            xtype: 'checktreepanel',
            autoLoad: false,
            root:{
                id:'root',
                text:'Privilégios',
                expanded:false,
                uiProvider:false
            }
            ,loader:{
                clearOnLoad: true,
                requestMethod: 'POST',
                directFn: Ext.app.Group.listPrivileges,
                paramsAsHash: true,
                listeners:{
                    scope: this,
                    'beforeload' : function(loader){                        
                        this.treePermission.loader.baseParams.group_id = this.edtId.getValue();
                    }
                },
                baseParams:{
                    treeId: 1
                }
            }
        });

        this.registerEvents();
    },

    registerEvents : function(){
        this.getForm().on('reset',function(){
            this.treePermission.clearValue();
        },this);
        
        this.ownerCt.on('edit',function(){
            var mask = new Ext.LoadMask(this.treePermission.getEl(),{msg: this.waitingPrivilegesMsg, removeMask: true});
            mask.show();
            
            this.treePermission.getRootNode().removeAll();
            this.treePermission.loader.load(this.treePermission.getRootNode(),function(){
                //this.treePermission.getRootNode().expand();
                mask.hide();
            },this);
        },this);

        this.ownerCt.on('create',function(){
            var mask = new Ext.LoadMask(this.treePermission.getEl(),{msg: this.waitingPrivilegesMsg, removeMask: true});
            mask.show();

            this.treePermission.getRootNode().removeAll();
            this.treePermission.loader.baseParams.group_id = -1;
            this.treePermission.loader.load(this.treePermission.getRootNode(),function(){
               this.treePermission.getRootNode().expand();

                mask.hide();
            },this);
            //
        },this);

        this.ownerCt.on('beforesave',function(param){
            var priv = this.treePermission.getValue();
            var list = [];
            
            for (i = 0; i < priv.length; i++){
                if (priv[i].charAt(0) != '-'){
                    list.push({permission_id: priv[i]});
                }
            }
            param.Privilege = Ext.encode(list);
        },this);

    }
});

Ext.reg('group-form',GroupForm);